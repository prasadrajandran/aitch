var I="__cI4Mp6yr0__",l=e=>(...n)=>({id:I,def:e,args:n});var d=(e,n)=>{Object.entries(n).forEach(([s,a])=>{switch(s){case"className":{a.split(/\s{1,}/).forEach(t=>{let r=t.trim();r&&e.classList.add(r)});break}case"style":Object.assign(e.style,a);break;case"dataset":Object.assign(e.dataset,a);break;default:if(s.startsWith("[")&&s.endsWith("]")){let r=s.substring(1,s.length-1);a===!1?e.removeAttribute(r):e.setAttribute(r,a===!0?"":a)}else e[s]!==a&&(e[s]=a)}})};var b=e=>{let n=new Text(""),s=!1,a=()=>{s&&(n.replaceWith(e),s=!1)};return{node:e,classMap:t=>{Object.entries(t).forEach(([r,i])=>{i?e.classList.add(r):e.classList.remove(r)})},attrMap:t=>{Object.entries(t).forEach(([r,i])=>{i===!1?e.removeAttribute(r):e.setAttribute(r,i===!0?"":i)})},dataMap:t=>{Object.entries(t).forEach(([r,i])=>{i===!1?delete e.dataset[r]:e.dataset[r]=i===!0?"":i})},text:t=>{e.textContent!==t&&(e.textContent=t)},style:t=>d(e,{style:t}),attrs:t=>d(e,t),show:()=>{e.style.removeProperty("display"),a()},hide:()=>{e.style.setProperty("display","none"),a()},remove:()=>{s||(e.replaceWith(n),s=!0)}}};var R=l({type:"attr",callback:(e,n)=>{n.forEach(({node:s,args:[a]})=>{Object.defineProperty(e,a,{value:b(s)})})}});var O=l({type:"node",callback:(e,n)=>{n.forEach(({node:s,args:[a,t]})=>{let r=new Text(t||"");s.replaceWith(r),Object.defineProperty(e,a,{enumerable:!0,get:()=>r.textContent,set:i=>{let p=String(i);r.textContent!==p&&(r.textContent=p)}})})}});var f=e=>!!(e&&(e.constructor===Object||Object.getPrototypeOf(e)===null));var P="__PzroJBb1g__";var x=e=>f(e)&&"$id"in e&&e.$id===P;var N="__un3Mvl07V__",g=({container:e,items:n,node:s,ref:a,key:t=(p,{key:c})=>String(c),keyName:r="data-h-list-key",indexKeyName:i="data-h-list-index"})=>{let p=Array.isArray(n)?n.entries():n instanceof Map?n:n instanceof Set?Array.from(n).entries():Object.entries(n),c=new Map;for(let m of e.querySelectorAll(`:scope > [${r}]`))c.set(m.getAttribute(r),m);let E=0;for(let[m,y]of p){let D=String(m),u=String(t(y,{key:D,index:E})),T=c.get(u)||s(y,{key:D,index:E});c.delete(u);let o=x(T)?T.$node:T;if(!(o instanceof Element))throw new Error("Each list item must contain only a single root node");if(Math.abs(Number(o.getAttribute(i)||1/0)-E)>0&&(o.remove(),o.setAttribute(r,u),o.setAttribute(i,String(E)),e.append(o)),a){x(T)&&Object.defineProperty(o,N,{enumerable:!1,value:T});let L=N in o?o[N]:o;a(L,y,{key:D,index:E})}E++}c.forEach(m=>m.remove())};var _=e=>l({type:"attr",callback:(n,s)=>{s.forEach(({node:a,args:[t]})=>{let{name:r}=t,i={...t,container:a};Object.defineProperty(n,r,{enumerable:!0,get:()=>i.items,set:p=>{i.items=p,g(i)}}),g(i)})}})(e);var A=l({type:"node",callback:(e,n)=>{n.forEach(({node:s,args:[a,t]})=>{s.appendChild(t.$node),Object.defineProperty(e,a,{value:t,enumerable:!0})})}});var M=l({type:"node",callback:(e,n)=>{n.forEach(({node:s,args:[a,t={}]})=>{s.replaceWith(a.$node);let{$id:r,$node:i,$cb:p,...c}=Object.getOwnPropertyDescriptors(a);t.directives!==!1&&Object.defineProperties(e,c),t.callbacks===!0&&a.$cb.forEach(E=>{e.$cb.add(E)})})}}),h=e=>M(e,{callbacks:!0,directives:!0});export{_ as _list,M as _merge,h as _mergeAll,A as _nest,R as _ref,O as _text};
//# sourceMappingURL=directives.js.map
